CREATE TABLE users (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    birthday DATE DEFAULT NULL,
    type VARCHAR(99) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL DEFAULT NULL
);

CREATE TABLE restaurants (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    user_id INT(11) NOT NULL,
    name VARCHAR(255) NOT NULL,
    menu_link VARCHAR(500) DEFAULT NULL,
    price_range VARCHAR(255) DEFAULT NULL,
    food_type VARCHAR(255) DEFAULT NULL,
    south_east BOOLEAN DEFAULT FALSE,
    south_west BOOLEAN DEFAULT FALSE,
    north_east BOOLEAN DEFAULT FALSE,
    north_west BOOLEAN DEFAULT FALSE,
    dine_in BOOLEAN DEFAULT FALSE,
    take_out BOOLEAN DEFAULT FALSE,
    delivery BOOLEAN DEFAULT FALSE,
    drive_thru BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
 FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE preferences (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    user_id INT(11) NOT NULL,
    price_range VARCHAR(255) DEFAULT NULL,
    food_type VARCHAR(255) DEFAULT NULL,
    south_east BOOLEAN DEFAULT FALSE,
    south_west BOOLEAN DEFAULT FALSE,
    north_east BOOLEAN DEFAULT FALSE,
    north_west BOOLEAN DEFAULT FALSE,
    dine_in BOOLEAN DEFAULT FALSE,
    take_out BOOLEAN DEFAULT FALSE,
    delivery BOOLEAN DEFAULT FALSE,
    drive_thru BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    d_food_type INT(11) DEFAULT NULL,
    d_neighborhoods INT(11) DEFAULT NULL,
    d_price_range INT(11) DEFAULT NULL,
    d_restaurant_types INT(11) DEFAULT NULL,
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE promotions (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    restaurant_id INT(11) NOT NULL,
    promotion_text TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (restaurant_id) REFERENCES restaurants(id) ON DELETE CASCADE
);